(()=>{"use strict";var t=document.createElement("canvas");t.id="spinning-canvas",t.style.backgroundColor="#000000",t.style.position="fixed",t.style.bottom="10px",t.style.right="20px",t.style.width="1000px",t.style.height="400px",t.style.zIndex="100";var n=document.getElementById(t.id);n&&n.parentElement&&n.parentElement.removeChild(n);var a=t.getContext("webgl"),e=a.createShader(a.VERTEX_SHADER);a.shaderSource(e,"precision lowp float;\n\nattribute vec2 a_position; // Flat square on XY plane\nattribute float a_startAngle;\nattribute float a_angularVelocity;\nattribute float a_rotationAxisAngle;\nattribute float a_particleDistance;\nattribute float a_particleAngle;\nattribute float a_particleY;\nuniform float u_time; // Global state\n\nvarying vec2 v_position;\nvarying vec3 v_color;\nvarying float v_overlight;\n\nvoid main() {\n  float angle = a_startAngle + a_angularVelocity * u_time;\n  float vertPosition = 1.1 - mod(u_time * .25 + a_particleY, 2.2);\n  float viewAngle = a_particleAngle + mod(u_time * .25, 6.28);\n\n  mat4 vMatrix = mat4(\n    1.3, 0.0, 0.0, 0.0,\n    0.0, 1.3, 0.0, 0.0,\n    0.0, 0.0, 1.0, 1.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n\n  mat4 shiftMatrix = mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    a_particleDistance * sin(viewAngle), vertPosition, a_particleDistance * cos(viewAngle), 1.0\n  );\n\n  mat4 pMatrix = mat4(\n    cos(a_rotationAxisAngle), sin(a_rotationAxisAngle), 0.0, 0.0,\n    -sin(a_rotationAxisAngle), cos(a_rotationAxisAngle), 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  ) * mat4(\n    1.0, 0.0, 0.0, 0.0,\n    0.0, cos(angle), sin(angle), 0.0,\n    0.0, -sin(angle), cos(angle), 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n\n  gl_Position = vMatrix * shiftMatrix * pMatrix * vec4(a_position * 0.03, 0.0, 1.0);\n  vec4 normal = vec4(0.0, 0.0, 1.0, 0.0);\n  vec4 transformedNormal = normalize(pMatrix * normal);\n\n  float dotNormal = abs(dot(normal.xyz, transformedNormal.xyz));\n  float regularLighting = dotNormal / 2.0 + 0.5;\n  float glanceLighting = smoothstep(0.92, 0.98, dotNormal);\n  v_color = vec3(\n    mix((0.5 - transformedNormal.z / 2.0) * regularLighting, 1.0, glanceLighting),\n    mix(0.5 * regularLighting, 1.0, glanceLighting),\n    mix((0.5 + transformedNormal.z / 2.0) * regularLighting, 1.0, glanceLighting)\n  );\n\n  v_position = a_position;\n  v_overlight = 0.9 + glanceLighting * 0.1;\n}\n\n"),a.compileShader(e);var r=a.createShader(a.FRAGMENT_SHADER);a.shaderSource(r,"precision lowp float;\nvarying vec2 v_position;\nvarying vec3 v_color;\nvarying float v_overlight;\n\nvoid main() {\n  gl_FragColor = vec4(v_color, 1.0 - smoothstep(0.8, v_overlight, length(v_position)));\n}\n\n"),a.compileShader(r);var o=a.createProgram();a.attachShader(o,e),a.attachShader(o,r),a.linkProgram(o),a.useProgram(o),a.bindBuffer(a.ARRAY_BUFFER,a.createBuffer());for(var i=[{name:"a_position",length:2,offset:0},{name:"a_startAngle",length:1,offset:2},{name:"a_angularVelocity",length:1,offset:3},{name:"a_rotationAxisAngle",length:1,offset:4},{name:"a_particleDistance",length:1,offset:5},{name:"a_particleAngle",length:1,offset:6},{name:"a_particleY",length:1,offset:7}],l=Object.keys(i).length+1,g=0;g<i.length;g++){var s=i[g].name,c=i[g].length,m=i[g].offset,f=a.getAttribLocation(o,s);a.vertexAttribPointer(f,c,a.FLOAT,!1,4*l,4*m),a.enableVertexAttribArray(f)}a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,a.createBuffer());for(var v=new Float32Array(200*l*4),_=new Uint16Array(1200),h=0;h<200;h++){for(var d=Math.random()*Math.PI*2,A=Math.random()*Math.PI*2,p=h*l*4,u=Math.sqrt(Math.random()),x=Math.random()*Math.PI*2,E=2.2*Math.random(),b=2*Math.random()+1,y=0;y<4;y++){var R=p+y*l;v[R+2]=A,v[R+3]=b,v[R+4]=d,v[R+5]=u,v[R+6]=x,v[R+7]=E}v[p]=v[p+2*l]=-1,v[p+l]=v[p+3*l]=1,v[p+1]=v[p+l+1]=-1,v[p+2*l+1]=v[p+3*l+1]=1;var M=6*h,w=4*h;_[M]=w,_[M+4]=_[M+1]=w+1,_[M+3]=_[M+2]=w+2,_[M+5]=w+3}a.bufferData(a.ARRAY_BUFFER,v,a.STATIC_DRAW),a.bufferData(a.ELEMENT_ARRAY_BUFFER,_,a.STATIC_DRAW);var L=a.getUniformLocation(o,"u_time"),F=(window.performance||Date).now();a.clearColor(0,0,0,1),a.enable(a.BLEND),a.blendFunc(a.SRC_ALPHA,a.ONE),a.viewport(0,0,t.width,t.height),function t(){a.uniform1f(L,((window.performance||Date).now()-F)/1e3),a.clear(a.COLOR_BUFFER_BIT),a.drawElements(a.TRIANGLES,1200,a.UNSIGNED_SHORT,0),requestAnimationFrame(t)}(),document.body.appendChild(t)})();